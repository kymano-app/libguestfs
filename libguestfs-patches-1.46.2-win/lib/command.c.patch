80a81,84
> #ifndef FD_SETSIZE
> #define FD_SETSIZE      1024
> #endif
> 
464a469
>     debug (cmd->g, "run_command capture_errors 1");
472a478
>     debug (cmd->g, "run_command stdout_callback 1");
473a480
>       debug (cmd->g, "stdout_callback ERR");
478a486
> 
480a489
>     debug (cmd->g, "stdout_callback NO PID");
486a496
>     debug (cmd->g, "run_command stdout_callback PID %d", cmd->pid);
487a498
>       debug (cmd->g, "capture_errors");
494a506
>       debug (cmd->g, "run_command stdout_callback 2");
500a513
>     debug (cmd->g, "return 0");
505a519
>     debug (cmd->g, "Child process capture_errors");
513a528
>     debug (cmd->g, "stdout_callback");
525a541
>   debug (cmd->g, "ERROR");
540a557
>   debug (cmd->g, "run_child 1");
613a631
>   debug (cmd->g, "run_child Run the command");
615a634
>     debug (cmd->g, "COMMAND_STYLE_EXECV");
621a641
>     debug (cmd->g, "COMMAND_STYLE_EXECV EXIT");
624a645
>     debug (cmd->g, "COMMAND_STYLE_SYSTEM");
625a647
>     debug (cmd->g, "COMMAND_STYLE_SYSTEM system");
626a649
>       debug (cmd->g, "COMMAND_STYLE_SYSTEM system -1");
630c653,654
<     if (WIFEXITED (r))
---
>     if (WIFEXITED (r)) {
>       debug (cmd->g, "COMMAND_STYLE_SYSTEM WEXITSTATUS");
631a656,657
>     }
>     debug (cmd->g, "COMMAND_STYLE_SYSTEM guestfs_int_exit_status_to_string");
635a662
>     debug (cmd->g, "COMMAND_STYLE_SYSTEM EXIT_FAILURE");
661a689
>     debug (cmd->g, "loop cmd->errorfd %d", cmd->errorfd);
667a696
>     debug (cmd->g, "loop cmd->outfd %d", cmd->outfd);
671a701,702
>   
>   debug (cmd->g, "loop nr_fds %d", nr_fds);
674a706,707
>     debug (cmd->g, "loop select");
>     debug (cmd->g, "loop maxfd %d", maxfd);
676a710
>       debug (cmd->g, "loop err %d %d", r, FD_SETSIZE);
679a714
>       debug (cmd->g, "loop err return -1");
682a718
>     debug (cmd->g, "loop 2");
684a721
>       debug (cmd->g, "loop read");
686c723,724
<       if (n > 0)
---
>       if (n > 0) {
>         debug (cmd->g, "loop n > 0");
688a727
>       }
689a729
>         debug (cmd->g, "loop n = 0");
696a737
>         debug (cmd->g, "loop n = -1");
704a746
>     debug (cmd->g, "loop 3");
710a753
>         debug (cmd->g, "loop 2 n>0");
714a758
>         debug (cmd->g, "loop 2 n=0");
723a768
>         debug (cmd->g, "loop 2 n = -1");
732c777,778
< 
---
>   
>   debug (cmd->g, "loop return 0");
760a807
>   debug (cmd->g, "finish_command ok");
763a811
>   debug (cmd->g, "run_command");
767c815,817
<   if (loop (cmd) == -1)
---
>   debug (cmd->g, "loop");
>   if (loop (cmd) == -1) {
>     debug (cmd->g, "loop = -1");
768a819,821
>   }
> 
>   debug (cmd->g, "wait_command");
